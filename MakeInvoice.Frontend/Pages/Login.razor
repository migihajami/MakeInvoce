@page "/Login"

@inject AppConfiguration AppConfig
@inject TokenKeeper TKeeper
@inject NavigationManager NavigationManager

<div class="row justify-content-center">
    <div class="col-md-9 col-lg-12 col-xl-10">
        <div class="card shadow-lg o-hidden border-0 my-5">
            <div class="card-body p-0">
                <div class="row">
                    <div class="col-lg-6 offset-lg-3">
                        <div class="p-5">
                            <div class="text-center">
                                <h4 class="text-dark mb-4">Sign in</h4>
                            </div>
                            <div class="user">
                                <div class="form-group"><input class="form-control form-control-user" type="email" id="exampleInputEmail" aria-describedby="emailHelp" placeholder="Enter Email Address..." name="email" @bind="userModel.Username"></div>
                                <div class="form-group"><input class="form-control form-control-user" type="password" id="exampleInputPassword" placeholder="Password" name="password" @bind="userModel.Password"></div>
                                <div class="form-group">
                                    <div class="custom-control custom-checkbox small">
                                        <div class="form-check"><input class="form-check-input custom-control-input" type="checkbox" id="formCheck-1"><label class="form-check-label custom-control-label" for="formCheck-1">Remember Me</label></div>
                                    </div>
                                </div><button class="btn btn-primary btn-block text-white btn-user" @onclick="@(async() => await ClickButton())">Login</button>
                            </div>
                            <div class="text-center"><a class="small" href="forgot-password.html">Forgot Password?</a></div>
                            <div class="text-center"><a class="small" href="register.html">Create an Account!</a></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    protected UserViewModel userModel { get; set; } = new UserViewModel();

    protected async Task ClickButton()
    {
        var ht = new HttpClient();
        var httpContent = JsonContent.Create(userModel, typeof(UserViewModel));
        var resp = await ht.PostAsync(AppConfig.ApiUrl + "/api/AuthToken/AuthToken", httpContent);
        try
        {
            var result = await resp.Content.ReadFromJsonAsync<TokenViewModel>();
            TKeeper.RenewToken(result.Token, TimeSpan.FromMinutes(30));
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            userModel = new UserViewModel();
        }
    }
}
